<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="classpath:xsd/spring-rabbit-1.3.xsd"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

	<!-- 以下为spring-rabbitmq 消费者端配置 -->
	<!-- 配置线程池 -->
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="5" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="30000" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="10" />
		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="5" />
	</bean>

	<bean id="connectionFactory"
		class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
		<constructor-arg value="%{decp.rabbitmq.host}" />
		<property name="username" value="%{decp.rabbitmq.userName}" />
		<property name="password" value="%{decp.rabbitmq.password}" />
		<property name="host"  value="%{decp.rabbitmq.host}" />
		<property name="port" value="%{decp.rabbitmq.prot}" />
	</bean>
	<rabbit:admin connection-factory="connectionFactory" />
	<!-- queue 队列声明 -->
	<rabbit:queue id="SME001.IN" durable="true"	auto-delete="true" exclusive="false" name="SME001.IN" />
    
	<!-- exchange queue binging key 绑定 -->
	<rabbit:direct-exchange name="decpMqServerExchange"	durable="true" auto-delete="false" id="decpMqServerExchange">
		<rabbit:bindings>
			<!-- 可在此处增加queue 与exchange的绑定关系，，其中queue为 “rabbit:queque定义的id”,key可以采用queque的名称-->
			<rabbit:binding queue="SME001.IN" key="SME001.IN" />
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!-- 定义decp消息监听类 -->
	<bean name="decpRabbitMqListener" class="com.yinker.decp.service.mq.listener.DecpRabbitMqListener" id="decpRabbitMqListener" >
		<property name="decpMsgService" ref="decpMsgService"/>
	</bean>
	<!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto" task-executor="taskExecutor">
        <rabbit:listener queues="SME001.IN" ref="decpRabbitMqListener"/>
    </rabbit:listener-container>

</beans>
