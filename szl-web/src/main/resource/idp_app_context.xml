<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
			http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- 数据源的定义 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="filters" value="config" />
      	<property name="connectionProperties" value="config.file=classpath:druid-pool-dev.xml;config.decrypt=false" />
    </bean>
	
	<!-- 集成mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <property name="configLocation">
            <value>classpath:idp\mybatis-config.xml</value>
        </property>
    </bean>

	<!-- 定义事务管理器（声明式的事务） -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="list*" propagation="SUPPORTS" />
			<!-- action中的方法 -->
			<tx:method name="init" propagation="SUPPORTS" />
			<tx:method name="list*" propagation="SUPPORTS" />
			<tx:method name="*list" propagation="SUPPORTS" />
			
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception,org.zwork.framework.exception.ServiceException" />
		</tx:attributes>
	</tx:advice>
	<!-- 
		 第一个*代表所有的返回值类型 
		 第二个*代表所有的类
		 第三个*代表类所有方法 最后一个..代表所有的参数。
		 com.yinker.crms.lmt.listener.impl
	 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="allManagerMethod"
			expression="execution(* org.zwork.srdp.rbac.service.impl.*.* (..))
				or execution(* org.zwork.srdp.pm.service.impl.*.* (..))
				or execution(* org.zwork.srdp.flow.service.*.* (..)) 
				or execution(* com.yinker.crms.*.listener.impl.*.* (..)) 
				or execution(* com.yinker.idp.*.action.*.* (..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod" />
	</aop:config>
    
	<!-- spring上下文,用于在web中获取spring上下文中的bean -->
	<bean id="springBeanContext" class="org.zwork.framework.thirdparty.org.springframework.SpringBeanContext" />
	
	<!-- Web应用启动时功能初始化配置 -->
	<bean id="webAppInitConfig" class="org.zwork.framework.listener.impl.WebAppInitConfig">
		<property name="webAppInits">
			<list>
				<bean class="org.zwork.framework.listener.impl.SysPropertyWebAppInit">
					<property name="description" value="系统环境变量初始化" />
					<property name="properties">
						<map>
							<entry key="file.encoding" value="UTF-8" />
						</map>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 集成srdp -->
	<import resource="classpath:srdp\java-mail.xml" />
	<import resource="classpath:srdp\key-generator.xml" />
	<import resource="classpath:srdp\beanContext.xml" />

</beans>